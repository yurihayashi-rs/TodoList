{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f19c531.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\n    const inputTextHandler = (e) => {\n        console.log(e.target.value);\n        //インプットの中でイベントが起こるたびにconsoleに記録される\n        setInputText(e.target.value);//consoleに値を残す\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault(); //勝手に更新されることを防ぐ 更新するのが⏬\n        setTodos([　\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000 }\n        ])\n        setInputText(\"\");\n    }\n \n    const statusHandler = (e) => {\n        console.log(e.target.value);\n        setStatus(e.target.value)\n    }\n\n\n    return (\n    <div>\n        <form>\n        <input \n        value={inputText} //書いたこと\n        onChange={inputTextHandler}  //inputで何か変化が起きたら発動する\n        type=\"text\" \n        className=\"todo-input\" \n        />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\"> \n            <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n            <select name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n            </select>\n        </div>\n        </form>\n    </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport { renderIntoDocument } from 'react-dom/test-utils'\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n    const deleteHandler = () => {\n        setTodos(todos.filter((el)=> el.id !== todo.id));\n    };\n    const completeHandler = () => {\n        setTodos(todos.map((item)=>{\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                }\n            }\n                return item;\n        }))\n    }\n\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n            <button onClick={completeHandler}className='complete-btn'>\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className='trash-btn'>\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({todos,setTodos,filteredTodos}) => {\n    console.log(todos)\n    return (\n        <div className=\"todo-container\">\n           <ul className=\"todo-list\">\n              {filteredTodos.map((todo) => (\n                  <Todo \n                  todo={todo}\n                  setTodos={setTodos} \n                  todos={todos} \n                  text={todo.text} \n                  key={todo.id}/>\n                ))}\n           </ul>\n            \n        </div>\n    )\n}\n\nexport default TodoList\n","import React,{useState, useEffect} from 'react'\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  //USE STATE\n  const[ inputText, setInputText ] = useState(\"\");\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //USE eFFECT\n  useEffect(() => {\n    filterHandler();\n  },[todos,status])\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n      break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n      break;\n      default: //上記のどれにも一致しなかった時の処理\n        setFilteredTodos(todos);\n      break;\n\n    }\n  }\n\n  return (\n    <div>\n      <form>\n        <h1>Yuri's Todo</h1>\n      </form>\n      <Form \n        inputText={inputText} \n        setInputText={setInputText} \n        todos={todos} \n        setTodos={setTodos}\n        setStatus={setStatus}\n        \n      />\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}